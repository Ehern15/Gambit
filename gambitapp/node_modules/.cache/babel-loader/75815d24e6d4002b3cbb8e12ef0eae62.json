{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erick La Paz\\\\Documents\\\\LFGambit\\\\Gambit\\\\gambitapp\\\\src\\\\components\\\\login\\\\LoginForm.js\";\nimport \"../../css/style.css\";\nimport { useState, setState, setMessage, Component } from \"react\";\nimport { Container, InputGroup, Form, Row, Col, Button, useAccordionButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.updateEmailValue = this.updateEmailValue.bind(this);\n    this.updatePasswordValue = this.updatePasswordValue.bind(this);\n    this.sendLogin = this.sendLogin.bind(this);\n  }\n\n  updateEmailValue(e) {\n    this.state.email = e.target.value; //console.log('email ', this.state);\n  } //Supp buddy\n\n\n  updatePasswordValue(e) {\n    this.state.password = e.target.value; //console.log('password ', this.state);\n  }\n\n  sendLogin() {\n    console.log(\"Sending login data...\");\n    var email = this.state.email;\n    var password = this.state.password;\n    const urlParams = new URL(window.location.href); //var errorMessage = ;\n\n    if (urlParams.searchParams.has('error')) {\n      var element = document.getElementById(\"login_error\");\n      element.classList.remove('d-none');\n    } //var errorMessage = this.state.errorMessage;\n\n    /*fetch('http://localhost:8080/login', {\r\n        method: 'POST',\r\n        data: { email: this.state.email, password: this.state.password}\r\n    });*/\n\n\n    fetch('http://localhost:8080/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'charset': 'utf-8'\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password //errorMessage: this.state.errorMessage,\n\n      })\n    }).then(response => response.json()).then(responseData => {\n      console.log(responseData);\n    }).catch(error => {\n      console.log(\"Error \".error);\n    }); //erik was here\n    // one piece is fake\n\n    console.log({\n      credentails: email,\n      password\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form__login u-center-text\",\n          action: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"form__login-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              id: \"email_field\",\n              children: \"E-Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"email\",\n              \"aria-label\": \"email\",\n              \"aria-describedby\": \"email\",\n              name: \"email\",\n              type: \"text\",\n              onChange: e => this.updateEmailValue(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"form__login-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              id: \"password_field\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"password\",\n              \"aria-label\": \"password\",\n              \"aria-describedby\": \"password\",\n              name: \"password\",\n              type: \"password\",\n              onChange: e => this.updatePasswordValue(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            id: \"login_error\",\n            className: \"d-none\",\n            children: \"Invalid username or password please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: this.sendLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default LoginForm;","map":{"version":3,"names":["useState","setState","setMessage","Component","Container","InputGroup","Form","Row","Col","Button","useAccordionButton","LoginForm","constructor","props","state","email","password","updateEmailValue","bind","updatePasswordValue","sendLogin","e","target","value","console","log","urlParams","URL","window","location","href","searchParams","has","element","document","getElementById","classList","remove","fetch","method","headers","body","JSON","stringify","then","response","json","responseData","catch","error","credentails","render"],"sources":["C:/Users/Erick La Paz/Documents/LFGambit/Gambit/gambitapp/src/components/login/LoginForm.js"],"sourcesContent":["import \"../../css/style.css\";\r\nimport {useState, setState, setMessage, Component } from \"react\";\r\nimport {Container, InputGroup, Form, Row, Col, Button, useAccordionButton} from 'react-bootstrap';\r\n\r\n\r\nexport class LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n            email: \"\",\r\n            password: \"\",\r\n        };\r\n        this.updateEmailValue = this.updateEmailValue.bind(this);\r\n        this.updatePasswordValue = this.updatePasswordValue.bind(this);\r\n        this.sendLogin = this.sendLogin.bind(this);\r\n    }\r\n\r\n    updateEmailValue(e){\r\n        this.state.email = e.target.value;\r\n        //console.log('email ', this.state);\r\n    }\r\n//Supp buddy\r\n    updatePasswordValue(e){\r\n        this.state.password = e.target.value;\r\n        //console.log('password ', this.state);\r\n    }\r\n\r\n\r\n    sendLogin() {\r\n        console.log(\"Sending login data...\");\r\n\r\n        var email = this.state.email;\r\n        var password = this.state.password;\r\n\r\n        const urlParams = new URL(window.location.href);\r\n\r\n        //var errorMessage = ;\r\n\r\n        if(urlParams.searchParams.has('error')) {\r\n            var element = document.getElementById(\"login_error\");\r\n            element.classList.remove('d-none');\r\n        }\r\n        //var errorMessage = this.state.errorMessage;\r\n        /*fetch('http://localhost:8080/login', {\r\n            method: 'POST',\r\n            data: { email: this.state.email, password: this.state.password}\r\n        });*/\r\n        fetch('http://localhost:8080/login', {  \r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'charset': 'utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            //errorMessage: this.state.errorMessage,\r\n        })}).then((response) => response.json())\r\n        .then((responseData) => {\r\n            console.log(responseData);\r\n        }).catch((error) => {\r\n            console.log(\"Error \" . error);\r\n        });\r\n        //erik was here\r\n        // one piece is fake\r\n        console.log({credentails: email, password});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center\">\r\n                    <Form className=\"form__login u-center-text\" action=\"login\">\r\n                        <InputGroup className=\"form__login-input-group\">\r\n                            <InputGroup.Text id=\"email_field\" >E-Mail</InputGroup.Text>\r\n                            <Form.Control placeholder=\"email\" aria-label=\"email\" aria-describedby=\"email\" name=\"email\" type=\"text\" \r\n                             onChange={e => this.updateEmailValue(e)}/>\r\n                        </InputGroup>\r\n                        <InputGroup className=\"form__login-input-group\">\r\n                            <InputGroup.Text id=\"password_field\" >Password</InputGroup.Text>\r\n                            <Form.Control placeholder=\"password\" aria-label=\"password\" aria-describedby=\"password\" name=\"password\" type=\"password\" onChange={e => this.updatePasswordValue(e)}/>\r\n                        </InputGroup>\r\n                        <Form.Text id=\"login_error\" className=\"d-none\">Invalid username or password please try again.</Form.Text>\r\n                        <Button variant=\"success\" onClick={this.sendLogin}>Login</Button>{' '}\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}